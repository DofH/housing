{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useState","files","setFiles","doc","setDoc","origView","useRef","SVG","setSVG","keys","spaces","elems","svg","tooltip","setTooltip","tipTimeout","camelCase","str","sep","split","map","part","i","toUpperCase","slice","join","setViewBox","box","x","y","width","height","current","setAttribute","cleanAttributes","attributes","attrs","attr","nodeName","nodeValue","style","prop","val","class","className","zoomedBox","elem","bbox","getBBox","tfm2elm","getScreenCTM","inverse","multiply","origin","createSVGPoint","dest","matrixTransform","zoomTo","newView","viewBox","TweenMax","to","ease","Power3","easeInOut","setKeyTo","replace","key","anchors","childNodes","filter","c","includes","anchor","classList","id","visible","add","remove","display","opacity","clickShow","clicked","parentNode","loadDoc","filename","a","fetch","res","status","text","alert","useEffect","dom","DOMParser","parseFromString","documentElement","buildTree","root","nodeType","Node","ELEMENT_NODE","children","child","length","find","sub","TEXT_NODE","push","data","React","createElement","trim","console","error","ref","createRef","onClick","easeOut","delay","onComplete","f","xlinkHref","unshift","evt","target","startsWith","fs","handler","toggle","space","window","addEventListener","node","setTimeout","clearTimeout","err","view","parts","parseFloat","getViewBox","mult","altKey","deltaY","Math","abs","shiftKey","ctrlKey","preventDefault","point","clientX","clientY","viewPoint","d","dPrime","passive","removeEventListener","role","aria-label","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ce004ad2.chunk.js","sourcesContent":["import React, { useState, useEffect, createRef, useRef } from 'react'\nimport { TweenMax, Power3 } from 'gsap/all'\nimport './App.css'\nimport { box } from 'tweetnacl'\n\nexport default () => {\n  const [files, setFiles] = useState(['survey.svg'])\n  const [doc, setDoc] = useState()\n  const origView = useRef(null)\n  const [SVG, setSVG] = useState()\n  const keys = useRef([])\n  const spaces = useRef([])\n  const elems = useRef({})\n  const svg = useRef()\n  const [tooltip, setTooltip] = useState()\n  const tipTimeout = useRef()\n\n  const camelCase = (str, sep = '-') => (\n    str.split(sep)\n    .map((part, i) => {\n      if(i === 0) {\n        return part\n      } else {\n        return part[0].toUpperCase() + part.slice(1)\n      }\n    })\n    .join('')\n  )\n\n  const getViewBox = () => {\n    const str = svg.current.attributes.viewBox.nodeValue\n    const parts = str.split(/\\s+/).map(parseFloat)\n    return {\n      x: parts[0], y: parts[1], width: parts[2], height: parts[3]\n    }\n  }\n\n  const setViewBox = (box) => {\n    if(typeof box !== 'string') {\n      box = [box.x, box.y, box.width, box.height].join(' ')\n    }\n    svg.current.setAttribute('viewBox', box)\n  }\n\n  const cleanAttributes = (attributes) => {\n    const attrs = {}\n    for(let attr of attributes) {\n      attrs[attr.nodeName] = attr.nodeValue\n    }\n\n    if(attrs.style) {\n      const style = {}\n      for(let elem of attrs.style.split(';')) {\n        let [prop, val] = elem.split(':')\n        prop = camelCase(prop, '-')\n        style[prop] = val\n      }\n      attrs.style = style\n    }\n\n    if(attrs.class) {\n      attrs.className = attrs.class\n      delete attrs.class\n    }\n    for(let attr of ['xml:space', 'xlink:href', 'xmlns:xlink']) {\n      if(attrs[attr]) {\n        attrs[camelCase(attr, ':')] = attrs[attr]\n        delete attrs[attr]\n      }\n    }\n    for(let attr of ['flood-opacity', 'flood-color']) {\n      if(attrs[attr]) {\n        attrs[camelCase(attr, '-')] = attrs[attr]\n        delete attrs[attr]\n      }\n    }\n\n    return attrs\n  }\n\n  const zoomedBox = (elem) => {\n    const bbox = elem.getBBox()\n    const tfm2elm = (\n      svg.current.getScreenCTM().inverse().multiply(elem.getScreenCTM())\n    )\n    const pad = 2\n    let origin = svg.current.createSVGPoint()\n    origin.x = bbox.x - pad\n    origin.y = bbox.y - pad\n    let dest = svg.current.createSVGPoint()\n    dest.x = origin.x + bbox.width + 2 * pad\n    dest.y = origin.y + bbox.height + 2 * pad\n    origin = origin.matrixTransform(tfm2elm)\n    dest = dest.matrixTransform(tfm2elm)\n    dest.x -= origin.x\n    dest.y -= origin.y\n    return [origin.x, origin.y, dest.x, dest.y].join(' ')\n  }\n\n  const zoomTo = (elem) => {\n    let newView = zoomedBox(elem)\n    if(newView === svg.current.attributes.viewBox.nodeValue) {\n      newView = origView.current\n    }\n    TweenMax.to(\n      svg.current, 1, { attr: { viewBox: newView }, ease: Power3.easeInOut }\n    )\n  }\n\n  const setKeyTo = (to) => {\n    to = to.replace(/^#/, '')\n    for(let key of keys.current) {\n      const anchors = (\n        [...key.current.childNodes]\n        .filter(c => c.attributes && c.attributes['xlink:href'])\n      )\n      const links = (\n        anchors\n        .map(c => c.attributes['xlink:href'].nodeValue.replace(/^#/, ''))\n      )\n\n      if(links.includes(to)) {\n        for(let anchor of anchors) {\n          if(!anchor.classList) continue\n\n          const id = anchor.attributes['xlink:href'].nodeValue.replace(/^#/, '')\n          const elem = elems.current[id] && elems.current[id].current\n          const visible = id === to\n\n          if(visible) {\n            anchor.classList.add('active')\n          } else {\n            anchor.classList.remove('active')\n          }\n\n          TweenMax.to(\n            elem, 0.5, { display: visible ? 'inline' : 'none', opacity: visible ? 1 : 0, ease: Power3.easeInOut }\n          )\n        }\n      }\n    }\n  }\n\n  const clickShow = (clicked, key) => {\n    if(clicked === key) return\n    while(clicked.parentNode !== key) {\n      clicked = clicked.parentNode\n    }\n    if([...clicked.classList].includes('active')) {\n      // Do what?\n    } else {\n      setKeyTo(clicked.attributes['xlink:href'].nodeValue)\n    }\n  }\n\n  const buildTree = (root, elems = {}, key = { val: 0 }) => {\n    if(root.nodeType !== Node.ELEMENT_NODE) {\n      console.error('Root Type', root.nodeType)\n    } else {\n      const children = []\n      for(let child of root.childNodes) {\n        if(child.nodeType === Node.ELEMENT_NODE) {\n          if(\n            child.childNodes.length === 0\n            || [...child.childNodes].find(\n              sub => sub.nodeType !== Node.TEXT_NODE\n            )\n          ) {\n            children.push(buildTree(child, elems, key))\n          } else {\n            const attrs = cleanAttributes(child.attributes)\n            attrs.key = ++key.val\n\n            const text = [...child.childNodes].map(c => c.data).join()\n            children.push(React.createElement(\n              child.nodeName, attrs, text\n            ))\n          }\n        } else if(child.data && child.data.trim() !== '') {\n          console.error('Child', child.data)\n        }\n      }\n      const attrs = cleanAttributes(root.attributes)\n      attrs.key = ++key.val\n\n      const ref = (root.nodeName === 'svg') ? svg : createRef()\n      attrs.ref = ref\n\n      if(attrs.id) {\n        elems[attrs.id] = attrs.ref\n      }\n\n      if(['space'].includes(attrs.className)) {\n        attrs.onClick = () => zoomTo(ref.current)\n      }\n\n      if(['parent'].includes(attrs.className)) {\n        attrs.onClick = () => {\n          const newView = zoomedBox(ref.current)\n          TweenMax.to(\n            svg.current, 0.5,\n            {\n              attr: { viewBox: newView },\n              ease: Power3.easeOut,\n            }\n          )\n          TweenMax.to(\n            svg.current, 0.1,\n            {\n              opacity: 0,\n              ease: Power3.easeInOut,\n              delay: 0.4,\n              onComplete: () => setFiles(f => [attrs.xlinkHref, ...f])\n            }\n          )\n        }\n      }\n\n      if(attrs.style && attrs.style.display === 'none') {\n        attrs.style.opacity = 0\n      }\n\n      if(attrs['inkscape:label']) {\n        children.unshift(<title key={++key.val}>{attrs['inkscape:label']}</title>)\n      }\n\n      if(attrs['inkscape:label'] === 'space') {\n        spaces.current.push(attrs.ref)\n      }\n\n      if(['key'].includes(attrs.className)) {\n        keys.current.push(attrs.ref)\n        attrs.onClick = (evt) => clickShow(evt.target, attrs.ref.current)\n      }\n\n      if(['link'].includes(attrs.className)) {\n        attrs.onClick = () => {\n          const dest = attrs.xlinkHref\n          if(dest.startsWith('#')) {\n            setKeyTo(dest)\n          } else {\n            setFiles(fs => [dest, ...fs])\n          }\n        }\n      }\n\n      if(['toggle'].includes(attrs.className)) {\n        const handler = () => {\n          attrs.ref.current.classList.toggle('on')\n          for(let space of spaces.current) {\n            const visible = space.current.style.opacity !== '0'\n            TweenMax.to(\n              space.current, 0.5,\n              {\n                display: visible ? 'none' : 'inline',\n                opacity: visible ? 0 : 1,\n                ease: Power3.easeInOut\n              }\n            )\n          }\n        }\n        window.addEventListener(\n          'keypress', (evt) => { if(evt.key === 's') handler() }\n        )\n        attrs.onClick = handler\n      }\n\n      if(!attrs.onClick) {\n        attrs.onClick = (evt) => {\n          let node = evt.target\n          while(node.parentNode && !node.attributes['inkscape:label']) {\n            node = node.parentNode\n          }\n          if(!node || !node.attributes) {\n            setTooltip('')\n          } else {\n            node.classList.add('clicked')\n            setTimeout(() => node.classList.remove('clicked'), 1000)\n            setTooltip(node.attributes['inkscape:label'].nodeValue)\n            if(tipTimeout.current) {\n              clearTimeout(tipTimeout.current)\n            }\n            tipTimeout.current = setTimeout(() => setTooltip(), 5000)\n          }\n        }\n      }\n\n      return React.createElement(\n        root.nodeName, attrs, children\n      )\n    }\n  }\n\n  const loadDoc = async (filename) => {\n    const res = await fetch(filename)\n    if(res.status >= 200 && res.status < 300) {\n      setDoc(await res.text())\n    } else {\n      alert(`Couldn't Load: ${filename}`)\n    }\n  }\n\n  const back = () => {\n    setFiles(f => f.slice(1))\n  }\n\n  useEffect(() => { loadDoc(files[0]) }, [files])\n\n  useEffect(() => {\n    if(doc) {\n      try {\n        const dom = (new DOMParser()).parseFromString(doc, 'text/xml')\n        keys.current = []\n        spaces.current = []\n        origView.current = dom.documentElement.attributes.viewBox.nodeValue\n        elems.current = {}\n        setSVG(buildTree(dom.documentElement, elems.current))\n      } catch(err) {\n        alert(`Error Loading: ${files[0]}`)\n        console.error(err)\n        console.error(doc)\n      }\n    }  \n  }, [doc]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    for(let key of keys.current) {\n      for(let anchor of [...key.current.childNodes]) {\n        if(!anchor.attributes) continue\n        const id = anchor.attributes['xlink:href'].nodeValue.replace(/^#/, '')\n        if(elems.current[id].current.style.opacity !== '0') {\n          setKeyTo(id)\n        }\n      }\n    }\n  }, [SVG])\n\n  useEffect(() => {\n    const handler = (evt) => {\n      let view = getViewBox()\n      const mult = (evt.altKey ? 0.025 : 0.1) * (evt.deltaY / Math.abs(evt.deltaY))\n      if(evt.shiftKey) { // pan\n        view.x += view.width * mult\n      } else if(evt.ctrlKey) { // zoom\n        evt.preventDefault()\n\n        const point = svg.current.createSVGPoint()\n        point.x = evt.clientX\n        point.y = evt.clientY\n        const viewPoint = point.matrixTransform(svg.current.getScreenCTM().inverse())\n        const d = { x: viewPoint.x - view.x, y: viewPoint.y - view.y }\n        const newView = {\n          width: view.width * (1 - mult), height: view.height * (1 - mult)\n        }\n        const dPrime = {\n          x: newView.width * (d.x / view.width),\n          y: newView.height * (d.y / view.height),\n        }\n        newView.x = viewPoint.x - dPrime.x\n        newView.y = viewPoint.y - dPrime.y\n        view = newView\n      } else { // scroll\n        view.y += view.height * mult\n      }\n      setViewBox(view)\n    }\n  \n    window.addEventListener('wheel', handler, { passive: false })\n    return () => window.removeEventListener('wheel', handler)\n  }, [])\n\n  useEffect(() => {\n    const handler = (evt) => {\n      if(evt.key === 'Enter') {\n        setViewBox(origView.current)\n      }\n    }\n    window.addEventListener('keypress', handler)\n    return () => window.removeEventListener('keypress', handler)\n  }, [])\n\n\n  return (\n    <div className='App' style={{height: '100vh'}}>\n      {SVG}\n      {tooltip && <h1>{tooltip}</h1>}\n      {files.length > 1 &&\n        <button id='back' onClick={back}>\n          <span role='img' aria-label='Close'>❌</span>\n        </button>\n      }\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}