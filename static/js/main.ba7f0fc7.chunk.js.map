{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["query","URLSearchParams","window","location","search","useState","get","files","setFiles","doc","setDoc","origView","useRef","SVG","setSVG","keys","spaces","elems","svg","tooltip","setTooltip","tipTimeout","camelCase","str","sep","split","map","part","i","toUpperCase","slice","join","setViewBox","box","x","y","width","height","current","setAttribute","cleanAttributes","attributes","attrs","attr","nodeName","nodeValue","style","prop","val","class","className","screenToSVG","tfm2elm","getScreenCTM","inverse","upLeft","svgPoint","lowRight","tUpLeft","matrixTransform","tLowRight","deltaTransformPoint","matrix","point","a","c","b","d","decomposeMatrix","px","py","skewX","Math","PI","atan2","skewY","translateX","e","translateY","f","scaleX","sqrt","scaleY","rotation","createSVGPoint","setKeyTo","to","replace","key","anchors","childNodes","filter","includes","anchor","classList","id","elem","visible","add","remove","TweenMax","display","opacity","ease","Power3","easeInOut","clickShow","clicked","parentNode","loadDoc","filename","fetch","res","status","text","alert","useEffect","dom","DOMParser","parseFromString","documentElement","viewBox","buildTree","root","nodeType","Node","ELEMENT_NODE","children","child","length","find","sub","TEXT_NODE","push","data","React","createElement","trim","console","error","ref","createRef","onClick","info","tl","TimelineLite","card","querySelector","getBoundingClientRect","duration","angle","transformOrigin","onComplete","xlinkHref","unshift","evt","target","dest","startsWith","fs","transform","prevClick","handler","toggle","space","addEventListener","node","setTimeout","clearTimeout","err","view","parts","parseFloat","getViewBox","mult","altKey","deltaY","abs","shiftKey","ctrlKey","preventDefault","clientX","clientY","viewPoint","newView","dPrime","passive","removeEventListener","role","aria-label","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"0RAIe,G,MAAA,WAAO,IAAD,EACbA,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAD/B,EAEOC,mBAAS,WACjCL,EAAMM,IAAI,eADuB,QACZ,oBAHJ,mBAEZC,EAFY,KAELC,EAFK,OAKGH,qBALH,mBAKZI,EALY,KAKPC,EALO,KAMbC,EAAWC,iBAAO,MANL,EAOGP,qBAPH,mBAOZQ,EAPY,KAOPC,EAPO,KAQbC,EAAOH,iBAAO,IACdI,EAASJ,iBAAO,IAChBK,EAAQL,iBAAO,IACfM,EAAMN,mBAXO,EAYWP,qBAZX,mBAYZc,EAZY,KAYHC,EAZG,KAabC,EAAaT,mBAEbU,EAAY,SAACC,GAAD,IAAMC,EAAN,uDAAY,IAAZ,OAChBD,EAAIE,MAAMD,GACTE,KAAI,SAACC,EAAMC,GACV,OAAS,IAANA,EACMD,EAEAA,EAAK,GAAGE,cAAgBF,EAAKG,MAAM,MAG7CC,KAAK,KAWFC,EAAa,SAACC,GACA,kBAARA,IACRA,EAAM,CAACA,EAAIC,EAAGD,EAAIE,EAAGF,EAAIG,MAAOH,EAAII,QAAQN,KAAK,MAEnDb,EAAIoB,QAAQC,aAAa,UAAWN,IAsBhCO,EAAkB,SAACC,GACvB,IADsC,EAChCC,EAAQ,GADwB,cAEtBD,GAFsB,IAEtC,IAAI,EAAJ,qBAA4B,CAAC,IAArBE,EAAoB,QAC1BD,EAAMC,EAAKC,UAAYD,EAAKE,WAHQ,8BAMtC,GAAGH,EAAMI,MAAO,CACd,IADc,EACRA,EAAQ,GADA,cAEEJ,EAAMI,MAAMrB,MAAM,MAFpB,IAEd,IAAI,EAAJ,qBAAwC,CAAC,IAAD,UACfA,MAAM,KADS,mBACjCsB,EADiC,KAC3BC,EAD2B,KAGtCF,EADAC,EAAOzB,EAAUyB,EAAM,MACTC,GALF,8BAOdN,EAAMI,MAAQA,EAGbJ,EAAMO,QACPP,EAAMQ,UAAYR,EAAMO,aACjBP,EAAMO,OAEf,IAAI,IAAJ,MAAgB,CAAC,YAAa,aAAc,eAA5C,eAA4D,CAAxD,IAAIN,EAAI,KACPD,EAAMC,KACPD,EAAMpB,EAAUqB,EAAM,MAAQD,EAAMC,UAC7BD,EAAMC,IAGjB,IAAI,IAAJ,MAAgB,CAAC,gBAAiB,eAAlC,eAAkD,CAA9C,IAAIA,EAAI,KACPD,EAAMC,KACPD,EAAMpB,EAAUqB,EAAM,MAAQD,EAAMC,UAC7BD,EAAMC,IAIjB,OAAOD,GAGHS,EAAc,SAAClB,GACnB,IAAMmB,EACJlC,EAAIoB,QAAQe,eAAeC,UAEvBC,EAASC,EAASvB,EAAIC,EAAGD,EAAIE,GAC7BsB,EAAWD,EAASvB,EAAIC,EAAID,EAAIG,MAAOH,EAAIE,EAAIF,EAAII,QACnDqB,EAAUH,EAAOI,gBAAgBP,GACjCQ,EAAYH,EAASE,gBAAgBP,GAM3C,MALa,CACXlB,EAAGwB,EAAQxB,EAAGC,EAAGuB,EAAQvB,EACzBC,MAAOwB,EAAU1B,EAAIwB,EAAQxB,EAC7BG,OAAQuB,EAAUzB,EAAIuB,EAAQvB,IAU5B0B,EAAsB,SAACC,EAAQC,GAGnC,MAAO,CAAE7B,EAFA6B,EAAM7B,EAAI4B,EAAOE,EAAID,EAAM5B,EAAI2B,EAAOG,EAAI,EAEnC9B,EADP4B,EAAM7B,EAAI4B,EAAOI,EAAIH,EAAM5B,EAAI2B,EAAOK,EAAI,IAG/CC,EAAkB,SAACN,GAIvB,IAAMO,EAAKR,EAAoBC,EAAQ,CAAE5B,EAAG,EAAGC,EAAG,IAC5CmC,EAAKT,EAAoBC,EAAQ,CAAE5B,EAAG,EAAGC,EAAG,IAG5CoC,EAAU,IAAMC,KAAKC,GAAMD,KAAKE,MAAML,EAAGlC,EAAGkC,EAAGnC,GAAK,GACpDyC,EAAU,IAAMH,KAAKC,GAAMD,KAAKE,MAAMJ,EAAGnC,EAAGmC,EAAGpC,GAErD,MAAO,CACL0C,WAAYd,EAAOe,EACnBC,WAAYhB,EAAOiB,EACnBC,OAAQR,KAAKS,KAAKnB,EAAOE,EAAIF,EAAOE,EAAIF,EAAOI,EAAIJ,EAAOI,GAC1DgB,OAAQV,KAAKS,KAAKnB,EAAOG,EAAIH,EAAOG,EAAIH,EAAOK,EAAIL,EAAOK,GAC1DI,MAAOA,EACPI,MAAOA,EACPQ,SAAUZ,IAKRf,EAAW,SAACtB,EAAGC,GACnB,IAAI4B,EAAQ7C,EAAIoB,QAAQ8C,iBAGxB,OAFArB,EAAM7B,EAAIA,EACV6B,EAAM5B,EAAIA,EACH4B,GAGHsB,EAAW,SAACC,GAChBA,EAAKA,EAAGC,QAAQ,KAAM,IADC,oBAERxE,EAAKuB,SAFG,IAEvB,IAAI,EAAJ,qBAA6B,CAAC,IAAtBkD,EAAqB,QACrBC,EACJ,YAAID,EAAIlD,QAAQoD,YACfC,QAAO,SAAA1B,GAAC,OAAIA,EAAExB,YAAcwB,EAAExB,WAAW,iBAO5C,GAJEgD,EACC/D,KAAI,SAAAuC,GAAC,OAAIA,EAAExB,WAAW,cAAcI,UAAU0C,QAAQ,KAAM,OAGtDK,SAASN,GAAK,CAAC,IAAD,gBACHG,GADG,IACrB,IAAI,EAAJ,qBAA2B,CAAC,IAApBI,EAAmB,QACzB,GAAIA,EAAOC,UAAX,CAEA,IAAMC,EAAKF,EAAOpD,WAAW,cAAcI,UAAU0C,QAAQ,KAAM,IAC7DS,EAAO/E,EAAMqB,QAAQyD,IAAO9E,EAAMqB,QAAQyD,GAAIzD,QAC9C2D,EAAUF,IAAOT,EAEpBW,EACDJ,EAAOC,UAAUI,IAAI,UAErBL,EAAOC,UAAUK,OAAO,UAG1BC,IAASd,GACPU,EAAM,GAAK,CACTK,QAASJ,EAAU,SAAW,OAC9BK,QAASL,EAAU,EAAI,EACvBM,KAAMC,IAAOC,cAlBE,iCAZF,gCAsCnBC,EAAY,SAACC,EAASnB,GAC1B,GAAGmB,IAAYnB,EAAf,CACA,KAAMmB,EAAQC,aAAepB,GAC3BmB,EAAUA,EAAQC,WAEjB,YAAID,EAAQb,WAAWF,SAAS,WAGjCP,EAASsB,EAAQlE,WAAW,cAAcI,aAuMxCgE,EAAO,uCAAG,WAAOC,GAAP,eAAA9C,EAAA,sEACI+C,MAAMD,GADV,aACRE,EADQ,QAEPC,QAAU,KAAOD,EAAIC,OAAS,KAFvB,6BAGZvG,EAHY,SAGCsG,EAAIE,OAHL,0DAKZC,MAAM,kBAAD,OAAmBL,IALZ,4CAAH,sDAyFb,OA5EAM,qBAAU,WAAQP,EAAQtG,EAAM,MAAO,CAACA,IAExC6G,qBAAU,WACR,GAAG3G,EACD,IAAK,IAAD,EACI4G,GAAO,IAAIC,WAAaC,gBAAgB9G,EAAK,YACnDM,EAAKuB,QAAU,GACftB,EAAOsB,QAAU,GACjB3B,EAAS2B,QAAT,UAAmB+E,EAAIG,gBAAgB/E,WAAWgF,eAAlD,aAAmB,EAAwC5E,UAC3D5B,EAAMqB,QAAU,GAChBxB,EA1NY,SAAZ4G,EAAaC,GAA4B,IAAtBnC,EAAqB,uDAAf,CAAExC,IAAK,GACpC,GAAG2E,EAAKC,WAAaC,KAAKC,aAEnB,CACL,IADK,EACCC,EAAW,GADZ,cAEYJ,EAAKjC,YAFjB,IAEL,IAAI,EAAJ,qBAAkC,CAAC,IAA3BsC,EAA0B,QAChC,GAAGA,EAAMJ,WAAaC,KAAKC,aACzB,GAC8B,IAA5BE,EAAMtC,WAAWuC,QACd,YAAID,EAAMtC,YAAYwC,MACvB,SAAAC,GAAG,OAAIA,EAAIP,WAAaC,KAAKO,aAG/BL,EAASM,KAAKX,EAAUM,EAAOxC,QAC1B,CACL,IAAM9C,EAAQF,EAAgBwF,EAAMvF,YACpCC,EAAM8C,MAAQA,EAAIxC,IAElB,IAAMkE,EAAO,YAAIc,EAAMtC,YAAYhE,KAAI,SAAAuC,GAAC,OAAIA,EAAEqE,QAAMvG,OACpDgG,EAASM,KAAKE,IAAMC,cAClBR,EAAMpF,SAAUF,EAAOwE,SAGnBc,EAAMM,MAA8B,KAAtBN,EAAMM,KAAKG,QACjCC,QAAQC,MAAM,QAASX,EAAMM,OArB5B,8BAwBL,IAAM5F,EAAQF,EAAgBmF,EAAKlF,YACnCC,EAAM8C,MAAQA,EAAIxC,IAElB,IAAM4F,EAAyB,QAAlBjB,EAAK/E,SAAsB1B,EAAM2H,sBAC9CnG,EAAMkG,IAAMA,EAETlG,EAAMqD,KACP9E,EAAMqB,QAAQI,EAAMqD,IAAMrD,EAAMkG,KAG/B,CAAC,SAAShD,SAASlD,EAAMQ,aAC1BR,EAAMoG,QAAU,WAAaF,EAAItG,UAGhC,CAAC,UAAUsD,SAASlD,EAAMQ,aAC3BR,EAAMoG,QAAU,WACdpG,EAAMkG,IAAItG,QAAQwD,UAAUI,IAAI,YAEhCwC,QAAQK,KAAK,KAAMrG,EAAMkG,IAAItG,QAAQoD,YAErC,IAAIsD,EAAK,IAAIC,IACPC,EAAOxG,EAAMkG,IAAItG,QAAQ6G,cAAc,SAE7C,GAAGD,EAAM,CACP,IAAIjH,EAAMiH,EAAKE,wBACfnH,EAAMkB,EAAYlB,GAElB+G,EAAG1D,GACDpE,EAAIoB,QAAS,CACX+G,SAAU,EACV/C,QAAS,EACT3D,KAAM,CAAE8E,QAAS,CAACxF,EAAIC,EAAGD,EAAIE,EAAGF,EAAIG,MAAOH,EAAII,QAAQN,KAAK,QAGhE,IACMuH,EADKlF,EAAgB8E,EAAK7F,gBACf8B,SACjB6D,EAAG1D,GACDpE,EAAIoB,QAAS,CACX+G,SAAU,EACV/C,QAAS,EACTnB,UAAWmE,EACXC,gBAAgB,GAAD,OAAKtH,EAAIC,EAAID,EAAIG,MAAjB,YAA0BH,EAAIE,EAAIF,EAAII,UAIzD,IAAI,IAAJ,kBAAqB6G,EAAKtC,WAAWlB,YAArC,eAAkD,CAA9C,IAAIsC,EAAK,KACX,GAAGA,IAAUkB,EAAM,CACjB,IACMI,EADKlF,EAAgB4D,EAAM3E,gBAChB8B,SACjBuD,QAAQK,KAAK,SAAKf,EAAOsB,GACzBN,EAAG1D,GACD0C,EAAO,CACLqB,SAAU,EACVlE,UAAW,KAAOmE,EAClBC,gBAAgB,GAAD,OAAKtH,EAAIC,EAAI,EAAID,EAAIG,MAAQ,EAA7B,YAAkCH,EAAIE,EAAIF,EAAII,OAAS,IAExE,OAMR2G,EAAG1D,GACDpE,EAAIoB,QACJ,CACE+G,SAAU,IACVvG,MAAO,CAAEwD,QAAS,GAClBC,KAAMC,IAAOC,UACb+C,WAAY,kBAAMhJ,GAAS,SAAAuE,GAAC,OAAKrC,EAAM+G,WAAX,mBAAyB1E,YAM1DrC,EAAMI,OAASJ,EAAMI,MAAMuD,QAI3B3D,EAAM,mBACPqF,EAAS2B,QAAQ,2BAAOlE,MAAOA,EAAIxC,KAAMN,EAAM,oBAGlB,UAA5BA,EAAM,mBACP1B,EAAOsB,QAAQ+F,KAAK3F,EAAMkG,KAGzB,CAAC,OAAOhD,SAASlD,EAAMQ,aACxBnC,EAAKuB,QAAQ+F,KAAK3F,EAAMkG,KACxBlG,EAAMoG,QAAU,SAACa,GAAD,OAASjD,EAAUiD,EAAIC,OAAQlH,EAAMkG,IAAItG,WAGxD,CAAC,QAAQsD,SAASlD,EAAMQ,aACzBR,EAAMoG,QAAU,WACd,IAAMe,EAAOnH,EAAM+G,UAChBI,EAAKC,WAAW,KACjBzE,EAASwE,GAETrJ,GAAS,SAAAuJ,GAAE,OAAKF,GAAL,mBAAcE,SAK/B,IAAIC,EAAYtH,EAAM,sBACtB,GAAGsH,EAAW,CACZ,IAAMC,EAAYvH,EAAMoG,QACxBpG,EAAMoG,QAAU,SAACa,GACZM,GAAWA,EAAUN,IAY5B,GAAG,CAAC,UAAU/D,SAASlD,EAAMQ,WAAY,CACvC,IAAMgH,EAAU,WACdxH,EAAMkG,IAAItG,QAAQwD,UAAUqE,OAAO,MADf,oBAEHnJ,EAAOsB,SAFJ,IAEpB,IAAI,EAAJ,qBAAiC,CAAC,IAA1B8H,EAAyB,QACzBnE,EAA0C,MAAhCmE,EAAM9H,QAAQQ,MAAMwD,QACpCF,IAASd,GACP8E,EAAM9H,QAAS,GACf,CACE+D,QAASJ,EAAU,OAAS,SAC5BK,QAASL,EAAU,EAAI,EACvBM,KAAMC,IAAOC,aATC,gCActBvG,OAAOmK,iBACL,YAAY,SAACV,GAAyB,MAAZA,EAAInE,KAAa0E,OAE7CxH,EAAMoG,QAAUoB,EAGlB,IAAMD,EAAYvH,EAAMoG,QACxBpG,EAAMoG,QAAU,SAACa,GACZM,GAAWA,EAAUN,GAGxB,IADA,IAAIW,EAAOX,EAAIC,OACTU,EAAK1D,aAAe0D,EAAK7H,WAAW,mBACxC6H,EAAOA,EAAK1D,WAEV0D,GAASA,EAAK7H,YAGhB6H,EAAKxE,UAAUI,IAAI,WACnBqE,YAAW,kBAAMD,EAAKxE,UAAUK,OAAO,aAAY,KACnD/E,EAAWkJ,EAAK7H,WAAW,kBAAkBI,WAC1CxB,EAAWiB,SACZkI,aAAanJ,EAAWiB,SAE1BjB,EAAWiB,QAAUiI,YAAW,kBAAMnJ,MAAc,MARpDA,EAAW,KAYf,IAAM4E,EAAOuC,IAAMC,cACjBb,EAAK/E,SAAUF,EAAOqF,GAGxB,OAAO/B,EA7LP0C,QAAQC,MAAM,YAAahB,EAAKC,UAwNvBF,CAAUL,EAAIG,kBACrB,MAAMiD,GACNtD,MAAM,kBAAD,OAAmB5G,EAAM,KAC9BmI,QAAQC,MAAM8B,GACd/B,QAAQC,MAAMlI,MAGjB,CAACA,IAEJ2G,qBAAU,WAAO,IAAD,gBACCrG,EAAKuB,SADN,IACd,IAAI,EAAJ,qBACE,IAD4B,IAAtBkD,EAAqB,QAC3B,kBAAsBA,EAAIlD,QAAQoD,YAAlC,eAA+C,CAA3C,IAAIG,EAAM,KACZ,GAAIA,EAAOpD,WAAX,CACA,IAAMsD,EAAKF,EAAOpD,WAAW,cAAcI,UAAU0C,QAAQ,KAAM,IACpB,MAA5CtE,EAAMqB,QAAQyD,GAAIzD,QAAQQ,MAAMwD,SACjCjB,EAASU,KAND,iCAUb,CAAClF,IAEJuG,qBAAU,WACR,IAAM8C,EAAU,SAACP,GACf,IAAIe,EAjaW,WACjB,IACMC,EADMzJ,EAAIoB,QAAQG,WAAWgF,QAAQ5E,UACzBpB,MAAM,OAAOC,IAAIkJ,YACnC,MAAO,CACL1I,EAAGyI,EAAM,GAAIxI,EAAGwI,EAAM,GAAIvI,MAAOuI,EAAM,GAAItI,OAAQsI,EAAM,IA6Z9CE,GACLC,GAAQnB,EAAIoB,OAAS,KAAQ,KAAQpB,EAAIqB,OAASxG,KAAKyG,IAAItB,EAAIqB,SACrE,GAAGrB,EAAIuB,SACLR,EAAKxI,GAAKwI,EAAKtI,MAAQ0I,OAClB,GAAGnB,EAAIwB,QAAS,CACrBxB,EAAIyB,iBAEJ,IAAMrH,EAAQ7C,EAAIoB,QAAQ8C,iBAC1BrB,EAAM7B,EAAIyH,EAAI0B,QACdtH,EAAM5B,EAAIwH,EAAI2B,QACd,IAAMC,EAAYxH,EAAMJ,gBAAgBzC,EAAIoB,QAAQe,eAAeC,WAC7Da,EAAI,CAAEjC,EAAGqJ,EAAUrJ,EAAIwI,EAAKxI,EAAGC,EAAGoJ,EAAUpJ,EAAIuI,EAAKvI,GACrDqJ,EAAU,CACdpJ,MAAOsI,EAAKtI,OAAS,EAAI0I,GAAOzI,OAAQqI,EAAKrI,QAAU,EAAIyI,IAEvDW,EAAS,CACbvJ,EAAGsJ,EAAQpJ,OAAS+B,EAAEjC,EAAIwI,EAAKtI,OAC/BD,EAAGqJ,EAAQnJ,QAAU8B,EAAEhC,EAAIuI,EAAKrI,SAElCmJ,EAAQtJ,EAAIqJ,EAAUrJ,EAAIuJ,EAAOvJ,EACjCsJ,EAAQrJ,EAAIoJ,EAAUpJ,EAAIsJ,EAAOtJ,EACjCuI,EAAOc,OAEPd,EAAKvI,GAAKuI,EAAKrI,OAASyI,EAE1B9I,EAAW0I,IAIb,OADAxK,OAAOmK,iBAAiB,QAASH,EAAS,CAAEwB,SAAS,IAC9C,kBAAMxL,OAAOyL,oBAAoB,QAASzB,MAChD,IAEH9C,qBAAU,WACR,IAAM8C,EAAU,SAACP,GACA,UAAZA,EAAInE,KACLxD,EAAWrB,EAAS2B,UAIxB,OADApC,OAAOmK,iBAAiB,WAAYH,GAC7B,kBAAMhK,OAAOyL,oBAAoB,WAAYzB,MACnD,IAID,yBAAKnE,GAAG,OACLlF,EACAM,GAAW,4BAAKA,GAChBZ,EAAM0H,OAAS,GACd,4BAAQlC,GAAG,OAAO+C,QArFX,WACXtI,GAAS,SAAAuE,GAAC,OAAIA,EAAEjD,MAAM,QAqFhB,0BAAM8J,KAAK,MAAMC,aAAW,SAA5B,cCreUC,QACW,cAA7B5L,OAAOC,SAAS4L,UAEe,UAA7B7L,OAAOC,SAAS4L,UAEhB7L,OAAOC,SAAS4L,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjE,GACLD,QAAQC,MAAMA,EAAMkE,c","file":"static/js/main.ba7f0fc7.chunk.js","sourcesContent":["import React, { useState, useEffect, createRef, useRef } from 'react'\nimport { TimelineLite, TweenMax, Power3 } from 'gsap/all'\nimport './App.css'\n\nexport default () => {\n  const query = new URLSearchParams(window.location.search)\n  const [files, setFiles] = useState([\n    query.get('file') ?? 'stay/survey.svg'\n  ])\n  const [doc, setDoc] = useState()\n  const origView = useRef(null)\n  const [SVG, setSVG] = useState()\n  const keys = useRef([])\n  const spaces = useRef([])\n  const elems = useRef({})\n  const svg = useRef()\n  const [tooltip, setTooltip] = useState()\n  const tipTimeout = useRef()\n\n  const camelCase = (str, sep = '-') => (\n    str.split(sep)\n    .map((part, i) => {\n      if(i === 0) {\n        return part\n      } else {\n        return part[0].toUpperCase() + part.slice(1)\n      }\n    })\n    .join('')\n  )\n\n  const getViewBox = () => {\n    const str = svg.current.attributes.viewBox.nodeValue\n    const parts = str.split(/\\s+/).map(parseFloat)\n    return {\n      x: parts[0], y: parts[1], width: parts[2], height: parts[3]\n    }\n  }\n\n  const setViewBox = (box) => {\n    if(typeof box !== 'string') {\n      box = [box.x, box.y, box.width, box.height].join(' ')\n    }\n    svg.current.setAttribute('viewBox', box)\n  }\n\n  // dispatched events go to all parents, propagated events go to all children\n  const propogateEvent = (type, ref) => {\n    const evt = new CustomEvent(type, {\n      bubbles: false,\n      detail: { text: () => type }\n    })\n    ref.current.dispatchEvent(evt)\n    eventChildren(evt, ref.current)\n  }\n\n  const eventChildren = (evt, target) => {\n    for(let child of [...target.childNodes]) {\n      if(child.dispatchEvent) {\n        child.dispatchEvent(evt)\n        eventChildren(evt, child)\n      }\n    }\n  }\n  \n  const cleanAttributes = (attributes) => {\n    const attrs = {}\n    for(let attr of attributes) {\n      attrs[attr.nodeName] = attr.nodeValue\n    }\n\n    if(attrs.style) {\n      const style = {}\n      for(let elem of attrs.style.split(';')) {\n        let [prop, val] = elem.split(':')\n        prop = camelCase(prop, '-')\n        style[prop] = val\n      }\n      attrs.style = style\n    }\n\n    if(attrs.class) {\n      attrs.className = attrs.class\n      delete attrs.class\n    }\n    for(let attr of ['xml:space', 'xlink:href', 'xmlns:xlink']) {\n      if(attrs[attr]) {\n        attrs[camelCase(attr, ':')] = attrs[attr]\n        delete attrs[attr]\n      }\n    }\n    for(let attr of ['flood-opacity', 'flood-color']) {\n      if(attrs[attr]) {\n        attrs[camelCase(attr, '-')] = attrs[attr]\n        delete attrs[attr]\n      }\n    }\n\n    return attrs\n  }\n\n  const screenToSVG = (box) => {\n    const tfm2elm = (\n      svg.current.getScreenCTM().inverse()\n    )\n    const upLeft = svgPoint(box.x, box.y)\n    const lowRight = svgPoint(box.x + box.width, box.y + box.height)\n    const tUpLeft = upLeft.matrixTransform(tfm2elm)\n    const tLowRight = lowRight.matrixTransform(tfm2elm)\n    const dest = {\n      x: tUpLeft.x, y: tUpLeft.y,\n      width: tLowRight.x - tUpLeft.x,\n      height: tLowRight.y - tUpLeft.y,\n    }\n    return dest  \n  }\n\n  const zoomTo = (elem) => {\n\n  }\n\n  // https://stackoverflow.com/a/16372587/264008\n  const deltaTransformPoint = (matrix, point) => {\n    var dx = point.x * matrix.a + point.y * matrix.c + 0;\n    var dy = point.x * matrix.b + point.y * matrix.d + 0;\n    return { x: dx, y: dy };\n  }\n  const decomposeMatrix = (matrix) => {\n    // @see https://gist.github.com/2052247\n\n    // calculate delta transform point\n    const px = deltaTransformPoint(matrix, { x: 0, y: 1 });\n    const py = deltaTransformPoint(matrix, { x: 1, y: 0 });\n\n    // calculate skew\n    const skewX = ((180 / Math.PI) * Math.atan2(px.y, px.x) - 90);\n    const skewY = ((180 / Math.PI) * Math.atan2(py.y, py.x));\n\n    return {\n      translateX: matrix.e,\n      translateY: matrix.f,\n      scaleX: Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b),\n      scaleY: Math.sqrt(matrix.c * matrix.c + matrix.d * matrix.d),\n      skewX: skewX,\n      skewY: skewY,\n      rotation: skewX // rotation is the same as skew x\n    }\n  }\n\n\n  const svgPoint = (x, y) => {\n    let point = svg.current.createSVGPoint()\n    point.x = x\n    point.y = y\n    return point\n  } \n\n  const setKeyTo = (to) => {\n    to = to.replace(/^#/, '')\n    for(let key of keys.current) {\n      const anchors = (\n        [...key.current.childNodes]\n        .filter(c => c.attributes && c.attributes['xlink:href'])\n      )\n      const links = (\n        anchors\n        .map(c => c.attributes['xlink:href'].nodeValue.replace(/^#/, ''))\n      )\n\n      if(links.includes(to)) {\n        for(let anchor of anchors) {\n          if(!anchor.classList) continue\n\n          const id = anchor.attributes['xlink:href'].nodeValue.replace(/^#/, '')\n          const elem = elems.current[id] && elems.current[id].current\n          const visible = id === to\n\n          if(visible) {\n            anchor.classList.add('active')\n          } else {\n            anchor.classList.remove('active')\n          }\n\n          TweenMax.to(\n            elem, 0.5, {\n              display: visible ? 'inline' : 'none',\n              opacity: visible ? 1 : 0,\n              ease: Power3.easeInOut,\n            }\n          )\n        }\n      }\n    }\n  }\n\n  const clickShow = (clicked, key) => {\n    if(clicked === key) return\n    while(clicked.parentNode !== key) {\n      clicked = clicked.parentNode\n    }\n    if([...clicked.classList].includes('active')) {\n      // Do what?\n    } else {\n      setKeyTo(clicked.attributes['xlink:href'].nodeValue)\n    }\n  }\n\n  const buildTree = (root, key = { val: 0 }) => {\n    if(root.nodeType !== Node.ELEMENT_NODE) {\n      console.error('Root Type', root.nodeType)\n    } else {\n      const children = []\n      for(let child of root.childNodes) {\n        if(child.nodeType === Node.ELEMENT_NODE) {\n          if(\n            child.childNodes.length === 0\n            || [...child.childNodes].find(\n              sub => sub.nodeType !== Node.TEXT_NODE\n            )\n          ) {\n            children.push(buildTree(child, key))\n          } else {\n            const attrs = cleanAttributes(child.attributes)\n            attrs.key = ++key.val\n\n            const text = [...child.childNodes].map(c => c.data).join()\n            children.push(React.createElement(\n              child.nodeName, attrs, text\n            ))\n          }\n        } else if(child.data && child.data.trim() !== '') {\n          console.error('Child', child.data)\n        }\n      }\n      const attrs = cleanAttributes(root.attributes)\n      attrs.key = ++key.val\n\n      const ref = (root.nodeName === 'svg') ? svg : createRef()\n      attrs.ref = ref\n\n      if(attrs.id) {\n        elems.current[attrs.id] = attrs.ref\n      }\n\n      if(['space'].includes(attrs.className)) {\n        attrs.onClick = () => zoomTo(ref.current)\n      }\n\n      if(['parent'].includes(attrs.className)) {\n        attrs.onClick = () => {\n          attrs.ref.current.classList.add('selected')\n\n          console.info('RT', attrs.ref.current.childNodes)\n\n          var tl = new TimelineLite()\n          const card = attrs.ref.current.querySelector('.card')\n\n          if(card) {\n            let box = card.getBoundingClientRect()\n            box = screenToSVG(box)\n\n            tl.to(\n              svg.current, {\n                duration: 1,\n                opacity: 1,\n                attr: { viewBox: [box.x, box.y, box.width, box.height].join(' ') },\n              }\n            )\n            const tx = decomposeMatrix(card.getScreenCTM())\n            const angle = tx.rotation\n            tl.to(\n              svg.current, {\n                duration: 1,\n                opacity: 1,\n                rotation: -angle,\n                transformOrigin: `${box.x + box.width} ${box.y + box.height}`\n              },\n            )\n  \n            for(let child of [...card.parentNode.childNodes]) {\n              if(child !== card) {\n                const tx = decomposeMatrix(child.getScreenCTM())\n                const angle = tx.rotation\n                console.info('ϴ', child, angle)\n                tl.to(\n                  child, {\n                    duration: 2,\n                    rotation: -11.5 * angle,\n                    transformOrigin: `${box.x - 4 * box.width / 2} ${box.y + box.height / 2}`\n                  },\n                  '<'\n                )\n              }\n            }\n          }\n\n          tl.to(\n            svg.current,\n            {\n              duration: 1.5,\n              style: { opacity: 0 },\n              ease: Power3.easeInOut,\n              onComplete: () => setFiles(f => [attrs.xlinkHref, ...f]),\n            }\n          )\n        }\n      }\n\n      if(attrs.style && attrs.style.display === 'none') {\n        //attrs.style.opacity = 0\n      }\n\n      if(attrs['inkscape:label']) {\n        children.unshift(<title key={++key.val}>{attrs['inkscape:label']}</title>)\n      }\n\n      if(attrs['inkscape:label'] === 'space') {\n        spaces.current.push(attrs.ref)\n      }\n\n      if(['key'].includes(attrs.className)) {\n        keys.current.push(attrs.ref)\n        attrs.onClick = (evt) => clickShow(evt.target, attrs.ref.current)\n      }\n\n      if(['link'].includes(attrs.className)) {\n        attrs.onClick = () => {\n          const dest = attrs.xlinkHref\n          if(dest.startsWith('#')) {\n            setKeyTo(dest)\n          } else {\n            setFiles(fs => [dest, ...fs])\n          }\n        }\n      }\n\n      let transform = attrs['selected:transform']\n      if(transform) {\n        const prevClick = attrs.onClick\n        attrs.onClick = (evt) => {\n          if(prevClick) prevClick(evt)\n\n          // TweenMax.to(\n          //   attrs.ref.current, 1,\n          //   {\n          //     attr: { transform: transform },\n          //     ease: Power3.easeOut,\n          //   }\n          // )\n        }\n      }\n\n      if(['toggle'].includes(attrs.className)) {\n        const handler = () => {\n          attrs.ref.current.classList.toggle('on')\n          for(let space of spaces.current) {\n            const visible = space.current.style.opacity !== '0'\n            TweenMax.to(\n              space.current, 0.5,\n              {\n                display: visible ? 'none' : 'inline',\n                opacity: visible ? 0 : 1,\n                ease: Power3.easeInOut\n              }\n            )\n          }\n        }\n        window.addEventListener(\n          'keypress', (evt) => { if(evt.key === 's') handler() }\n        )\n        attrs.onClick = handler\n      }\n\n      const prevClick = attrs.onClick\n      attrs.onClick = (evt) => {\n        if(prevClick) prevClick(evt)\n\n        let node = evt.target\n        while(node.parentNode && !node.attributes['inkscape:label']) {\n          node = node.parentNode\n        }\n        if(!node || !node.attributes) {\n          setTooltip('')\n        } else {\n          node.classList.add('clicked')\n          setTimeout(() => node.classList.remove('clicked'), 1000)\n          setTooltip(node.attributes['inkscape:label'].nodeValue)\n          if(tipTimeout.current) {\n            clearTimeout(tipTimeout.current)\n          }\n          tipTimeout.current = setTimeout(() => setTooltip(), 5000)\n        }\n      }\n\n      const elem = React.createElement(\n        root.nodeName, attrs, children\n      )\n\n      return elem\n    }\n  }\n\n  const loadDoc = async (filename) => {\n    const res = await fetch(filename)\n    if(res.status >= 200 && res.status < 300) {\n      setDoc(await res.text())\n    } else {\n      alert(`Couldn't Load: ${filename}`)\n    }\n  }\n\n  const back = () => {\n    setFiles(f => f.slice(1))\n  }\n\n  useEffect(() => { loadDoc(files[0]) }, [files])\n\n  useEffect(() => {\n    if(doc) {\n      try {\n        const dom = (new DOMParser()).parseFromString(doc, 'text/xml')\n        keys.current = []\n        spaces.current = []\n        origView.current = dom.documentElement.attributes.viewBox?.nodeValue\n        elems.current = {}\n        setSVG(buildTree(dom.documentElement))\n      } catch(err) {\n        alert(`Error Loading: ${files[0]}`)\n        console.error(err)\n        console.error(doc)\n      }\n    }  \n  }, [doc]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    for(let key of keys.current) {\n      for(let anchor of [...key.current.childNodes]) {\n        if(!anchor.attributes) continue\n        const id = anchor.attributes['xlink:href'].nodeValue.replace(/^#/, '')\n        if(elems.current[id].current.style.opacity !== '0') {\n          setKeyTo(id)\n        }\n      }\n    }\n  }, [SVG])\n\n  useEffect(() => {\n    const handler = (evt) => {\n      let view = getViewBox()\n      const mult = (evt.altKey ? 0.025 : 0.1) * (evt.deltaY / Math.abs(evt.deltaY))\n      if(evt.shiftKey) { // pan\n        view.x += view.width * mult\n      } else if(evt.ctrlKey) { // zoom\n        evt.preventDefault()\n\n        const point = svg.current.createSVGPoint()\n        point.x = evt.clientX\n        point.y = evt.clientY\n        const viewPoint = point.matrixTransform(svg.current.getScreenCTM().inverse())\n        const d = { x: viewPoint.x - view.x, y: viewPoint.y - view.y }\n        const newView = {\n          width: view.width * (1 - mult), height: view.height * (1 - mult)\n        }\n        const dPrime = {\n          x: newView.width * (d.x / view.width),\n          y: newView.height * (d.y / view.height),\n        }\n        newView.x = viewPoint.x - dPrime.x\n        newView.y = viewPoint.y - dPrime.y\n        view = newView\n      } else { // scroll\n        view.y += view.height * mult\n      }\n      setViewBox(view)\n    }\n  \n    window.addEventListener('wheel', handler, { passive: false })\n    return () => window.removeEventListener('wheel', handler)\n  }, [])\n\n  useEffect(() => {\n    const handler = (evt) => {\n      if(evt.key === 'Enter') {\n        setViewBox(origView.current)\n      }\n    }\n    window.addEventListener('keypress', handler)\n    return () => window.removeEventListener('keypress', handler)\n  }, [])\n\n\n  return (\n    <div id='App'>\n      {SVG}\n      {tooltip && <h1>{tooltip}</h1>}\n      {files.length > 1 &&\n        <button id='back' onClick={back}>\n          <span role='img' aria-label='Close'>❌</span>\n        </button>\n      }\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}